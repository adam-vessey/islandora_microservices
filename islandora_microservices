#!/bin/sh
#
#
#
#   Startup/shutdown script for running islandora microservices.
#
#   Linux chkconfig stuff:
#
#   chkconfig: 2345 80 05
#   description: Startup/shutdown script for running Islandora Microservices.
#
#  03/01/2012 by avessey: Made to use 'su', so as to avoid the tty requirement of sudo  
#
# Source function library.
. /etc/environment #Some variables may be defined here...
. /etc/profile #Get BASH specific stuff (I use profile.d to add to the path for BASH)

PROG="Islandora Microservices"
PYTHON=/usr/bin/python2.6
MICROSERVICES_PATH=$FEDORA_HOME/microservices
CONFIG_FILE=$MICROSERVICES_PATH/islandora_microservices.cfg
#LOCK_FILE=$MICROSERVICES_PATH/microservices.lock
# *** Please make sure you change the fedora user to reflect the local setup. ***t
FEDORA_USER=fedora
LISTENER_LINE="$PYTHON ./islandora_listener.py -C $CONFIG_FILE"
LISTENER_LINE_ENVED="/usr/bin/screen -d -m /bin/env PATH=\"$PATH\" $LISTENER_LINE"

start () {
	echo -n "Starting $PROG: "
	# check to see if the process is already running
	if pgrep -fx "$LISTENER_LINE" >/dev/null 2>&1; then
		echo "$PROG is already running"
	else
			# start JMS as the fedora user
     			su --session-command="cd $MICROSERVICES_PATH && $LISTENER_LINE_ENVED &" $FEDORA_USER #> /dev/null #2>&1
			sleep 3
			if pgrep -fx "$LISTENER_LINE" >/dev/null 2>&1; then
				#su --session-command="touch $LOCK_FILE" $FEDORA_USER
				echo -e "                                          [ \033[0;32m OK\033[0;39m""  ]"
			else
				echo -e "                                          [ \033[0;31m FAILED\033[0;39m""  ]"
			fi
		fi
}

stop () {
	# stop daemon
	echo -n "Stopping $PROG: "
	# check to see if the process is running
	if pgrep -fx "$LISTENER_LINE" >/dev/null 2>&1; then
		# use kill -2 to stop JMS.
		if su --session-command="pkill -fx \"$LISTENER_LINE\"" $FEDORA_USER &>/dev/null; then
			echo -e "                                          [ \033[0;32m OK\033[0;39m""  ]"
                        #su --session-command="rm -f $LOCK_FILE" $FEDORA_USER
		else
			echo -e "                                          [ \033[0;31m FAILED\033[0;39m""  ]"
		fi
	else
		echo "$PROG is not running"
	fi
}

restart() {
	stop
	start
}

case $1 in
	start)
		start
	;;
	stop)
		stop
	;;
	restart)
		restart
	;;
	status)
		if [ -f $LOCK_FILE ]; then
			echo "$PROG (pid `ps -ef | grep 'fedora_listener' | grep -v 'grep' | awk '{print $2}'`) is running..."
		else
			echo "$PROG has not been started."
		fi
	;;
	*)

	echo $"Usage: $PROG {start|stop|restart|status}"
	exit 3
esac

exit $RETVAL
